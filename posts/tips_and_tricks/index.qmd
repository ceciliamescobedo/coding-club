> -   title: "Tips and Tricks in R Studio" description: "Several tips to
>     save time and improve quality of life in using R Studio" author:
>     "Stefania Noerman" date: "2023-04-03" format: html categories:
> -   quarto
> -   tips listing: contents: posts sort: "date desc" type: default
>     categories: true sort-ui: false filter-ui: false page-layout: full
>     title-block-banner: true
> -   

Today in the [codingclub](https://coding-club.rostools.org/), we learned
several tips and tricks to save time and improve quality of life in
using R Studio. Let's start!

## Step 1

First of all, we need to create a new project and save it somewhere you
prefer.

Then, create a new Quarto document by choosing **File** -\> **New file**
-\> **Quarto document**. Give a title to it then click **Create**.

## Time-savers

Did you notice that using your keyboard and mouse alternately may not be
as efficient as using only keyboard? Here are some tips to *save some
times* while improving your code.

1.  You can move from console to script quickly without touching your
    mouse by pressing **Ctrl+1**. Then, you can use **Ctrl+2** to move
    to console.

2.  Why did we create new project? Because we want to make the script
    looks tidier. And how do we do this? In **Tools** -\> **Project
    Options** -\> **R Markdown**, choose **column** for automatic text
    wrapping (line breaks).

3.  You can use **Ctrl+Shift+P** to open any function you want in R.
    Some examples:

    a.If you want to insert a new chunk, you can choose **Insert a new
    code chunk**.

    ```{r}
    #| echo: true
    ```

    This is how a chunk looks like. You can run this chunk separately by
    clicking the play button on the top right corner.

    b.  You can choose **Insert Roxygen comment for the run function**
        where you can give comments on your function.

    c.  Type **Edit snippets**, then you can run some functions in R by
        using predefined snippets. You can also add your own, of course.

4.  One of most important time-savers is using tab completion. In either
    console or script pane, type **fun** then press **tab**, and you can
    see a template for function.

    ```{r}
    name <- function(variables) {
        
    }
    ```

    You can just fill in the name of the function, press tab to move to
    the variables, change the name, then press tab again to move to the
    function and write your function without moving your fingers from
    the keyboard.

## Quality of life

R is meant to reduce repetition and improve reproducibility. But,
changing some things may even improve your *quality of life*. Here are
some settings that can help improving the quality of life in coding with
R:

1.  Under **Tools** -\> **Global Options** -\> **Code** -\> **Display**,
    under **Syntax section**, check the boxes for **highlight R function
    calls** and **use rainbow parentheses**. The latter is especially
    useful to mark if we have equal number of opening and closing
    brackets.

2.  Under **Tools** -\> **Global Options** -\> **Code** -\> **Saving**,
    check the boxes under **Auto-save** written **always save R script
    before sourcing** and **automatically save when editor loses
    focus**. When editor is idle, make sure to choose **backup unsaved
    changes**, to make sure that you don't lose anything you are working
    on if your laptop breaks or you spills your coffee, for example.

3.  Under **Tools** -\> **Global Options** -\> **Accessibility**, check
    the box saying **highlight focused panel**. This selection will help
    highlighting the pane you are in, either you are in script or
    console pane.

One investment that can be made is to learn using Vim. It is a steep
learning curve to get used to it, but it will save a lot of time to give
commands by typing your code. So it is like coding while coding, sounds
cool, right? How do you do it? Under **Tools** -\> **Global Options**
-\> **Code** -\> **keybindings**, you can use *Vim*. After *Vim* is
activated, the cursor will change to blinking red in the script window.
When it happens, we can do several things just by typing certain keys.
Here are some examples:

-   *u* to undo
-   *d* to delete
-   *d2w* to delete 2 words
-   *d/p* to delete until the next p
-   *k* to go up
-   *j* to go down
-   *i* will make the cursor go back to normal so you can insert text
-   **Esc** to go back to the *Vim* mode

If you want to go back to normal, you can simply deactivate the
**keybindings** to default mode.

Hopefully you find these tips useful. Please check our
[youtubevideo](link_here_when_available) for more information. We are
sorry because the video doesn't contain audio this time, but we will try
to find where the problem was and hopefully we can bring out the audio
next time. Ciao!
